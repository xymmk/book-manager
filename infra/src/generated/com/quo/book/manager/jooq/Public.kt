/*
 * This file is generated by jOOQ.
 */
package com.quo.book.manager.jooq


import com.quo.book.manager.jooq.tables.AuthorBook
import com.quo.book.manager.jooq.tables.Authors
import com.quo.book.manager.jooq.tables.Books

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.author_book</code>.
     */
    val AUTHOR_BOOK: AuthorBook get() = AuthorBook.AUTHOR_BOOK

    /**
     * The table <code>public.authors</code>.
     */
    val AUTHORS: Authors get() = Authors.AUTHORS

    /**
     * The table <code>public.books</code>.
     */
    val BOOKS: Books get() = Books.BOOKS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        AuthorBook.AUTHOR_BOOK,
        Authors.AUTHORS,
        Books.BOOKS
    )
}
