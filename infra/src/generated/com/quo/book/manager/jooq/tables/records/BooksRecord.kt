/*
 * This file is generated by jOOQ.
 */
package com.quo.book.manager.jooq.tables.records


import com.quo.book.manager.jooq.tables.Books
import com.quo.book.manager.jooq.tables.interfaces.IBooks

import java.math.BigDecimal

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BooksRecord() : UpdatableRecordImpl<BooksRecord>(Books.BOOKS), IBooks {

    open override var bookId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open override var price: BigDecimal?
        set(value): Unit = set(1, value)
        get(): BigDecimal? = get(1) as BigDecimal?

    open override var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open override var publicationStatus: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: IBooks) {
        this.bookId = from.bookId
        this.price = from.price
        this.title = from.title
        this.publicationStatus = from.publicationStatus
        resetChangedOnNotNull()
    }

    override fun <E : IBooks> into(into: E): E {
        into.from(this)
        return into
    }

    /**
     * Create a detached, initialised BooksRecord
     */
    constructor(bookId: Int? = null, price: BigDecimal? = null, title: String? = null, publicationStatus: String? = null): this() {
        this.bookId = bookId
        this.price = price
        this.title = title
        this.publicationStatus = publicationStatus
        resetChangedOnNotNull()
    }
}
